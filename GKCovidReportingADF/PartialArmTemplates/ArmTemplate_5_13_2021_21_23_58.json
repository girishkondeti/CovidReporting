{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "GKCovidReportingADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ds_processed_hospital_weekly')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_covidreporting_dl",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/hospital_admin_weekly",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					},
					{
						"name": "country_code_2_digit",
						"type": "String"
					},
					{
						"name": "country_code_3_digit",
						"type": "String"
					},
					{
						"name": "country_code",
						"type": "String"
					},
					{
						"name": "reported_date",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "Cases_Count",
						"type": "String"
					},
					{
						"name": "deaths_Count",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_processed_hosptal_daily')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_covidreporting_dl",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/hospital_admin_daily",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					},
					{
						"name": "country_code_2_digit",
						"type": "String"
					},
					{
						"name": "country_code_3_digit",
						"type": "String"
					},
					{
						"name": "country_code",
						"type": "String"
					},
					{
						"name": "reported_date",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "Cases_Count",
						"type": "String"
					},
					{
						"name": "deaths_Count",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_transform_cases_deaths')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_cases_deaths",
								"type": "DatasetReference"
							},
							"name": "casesdeathssource"
						},
						{
							"dataset": {
								"referenceName": "ds_country_lookup",
								"type": "DatasetReference"
							},
							"name": "LookupCountry"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_processed_cases_deaths",
								"type": "DatasetReference"
							},
							"name": "casesdeathssink"
						}
					],
					"transformations": [
						{
							"name": "FlterEurope"
						},
						{
							"name": "SelectRequiredFeilds"
						},
						{
							"name": "PivotDC"
						},
						{
							"name": "Lookup1"
						},
						{
							"name": "Select2ReqFeilds"
						}
					],
					"script": "source(output(\n\t\tcountry as string,\n\t\tcountry_code as string,\n\t\tcontinent as string,\n\t\tpopulation as integer,\n\t\tindicator as string,\n\t\tdaily_count as integer,\n\t\tdate as date,\n\t\trate_14_day as double,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> casesdeathssource\nsource(output(\n\t\tcountry as string,\n\t\tcountry_code_2_digit as string,\n\t\tcountry_code_3_digit as string,\n\t\tcontinent as string,\n\t\tpopulation as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> LookupCountry\ncasesdeathssource filter(continent == 'Europe' && not(isNull(country_code))) ~> FlterEurope\nFlterEurope select(mapColumn(\n\t\tcountry,\n\t\tcountry_code,\n\t\tpopulation,\n\t\tindicator,\n\t\tdaily_count,\n\t\tsource,\n\t\teach(match(name==\"date\"),\n\t\t\t\"reported\"+\"_date\" = $$)\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectRequiredFeilds\nSelectRequiredFeilds pivot(groupBy(country,\n\t\tpopulation,\n\t\tcountry_code,\n\t\treported_date,\n\t\tsource),\n\tpivotBy(indicator, ['confirmed_cases', 'deaths']),\n\tCount = sum(daily_count),\n\tcolumnNaming: '$V_$N',\n\tlateral: true) ~> PivotDC\nPivotDC, LookupCountry lookup(PivotDC@country == LookupCountry@country,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 select(mapColumn(\n\t\tcountry = PivotDC@country,\n\t\tpopulation = PivotDC@population,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tcountry_code,\n\t\treported_date,\n\t\tsource,\n\t\tCases_Count = confirmed_cases_Count,\n\t\tdeaths_Count\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2ReqFeilds\nSelect2ReqFeilds sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['cases_deaths.csv'],\n\ttruncate: true,\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> casesdeathssink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfhospitaladmissions')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_hospital_Admissions",
								"type": "DatasetReference"
							},
							"name": "SrcHospitalAdmissionsFile"
						},
						{
							"dataset": {
								"referenceName": "ds_dim_date",
								"type": "DatasetReference"
							},
							"name": "lkpDimDate"
						},
						{
							"dataset": {
								"referenceName": "ds_country_lookup",
								"type": "DatasetReference"
							},
							"name": "srcLkpcountry"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_processed_hospital_weekly",
								"type": "DatasetReference"
							},
							"name": "sinkWeekly"
						},
						{
							"dataset": {
								"referenceName": "ds_processed_hosptal_daily",
								"type": "DatasetReference"
							},
							"name": "sinkDaily"
						}
					],
					"transformations": [
						{
							"name": "Select1ReqFeilds"
						},
						{
							"name": "Lkpcountry"
						},
						{
							"name": "Select2RequiredFeilds"
						},
						{
							"name": "SplitDailyFromWeekly"
						},
						{
							"name": "DCYearWeek"
						},
						{
							"name": "AggrDimdate"
						},
						{
							"name": "JoinWeeklyDimdate"
						},
						{
							"name": "PivotWeekly"
						},
						{
							"name": "PivotDaily"
						},
						{
							"name": "SortWeekly"
						}
					],
					"script": "source(output(\n\t\tcountry as string,\n\t\tindicator as string,\n\t\tdate as date,\n\t\tyear_week as string,\n\t\tvalue as double,\n\t\tsource as string,\n\t\turl as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SrcHospitalAdmissionsFile\nsource(output(\n\t\tdate_key as date,\n\t\tdate as date,\n\t\tyear as string,\n\t\tmonth as short,\n\t\tday as short,\n\t\tday_name as string,\n\t\tday_of_year as short,\n\t\tweek_of_month as short,\n\t\tweek_of_year as string,\n\t\tmonth_name as string,\n\t\tyear_month as integer,\n\t\tyear_week as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> lkpDimDate\nsource(output(\n\t\tcountry as string,\n\t\tcountry_code_2_digit as string,\n\t\tcountry_code_3_digit as string,\n\t\tcontinent as string,\n\t\tpopulation as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> srcLkpcountry\nSrcHospitalAdmissionsFile select(mapColumn(\n\t\tcountry,\n\t\tindicator,\n\t\treported_date = date,\n\t\treported_year_week = year_week,\n\t\tvalue,\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Select1ReqFeilds\nSelect1ReqFeilds, srcLkpcountry lookup(Select1ReqFeilds@country == srcLkpcountry@country,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lkpcountry\nLkpcountry select(mapColumn(\n\t\tcountry = Select1ReqFeilds@country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tindicator,\n\t\treported_date,\n\t\treported_year_week,\n\t\tvalue,\n\t\tsource,\n\t\tpopulation\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Select2RequiredFeilds\nSelect2RequiredFeilds split(indicator =='Weekly new ICU admissions per 100k' || indicator=='Weekly new hospital admissions per 100k',\n\tindicator=='Daily hospital occupancy' || indicator=='Daily ICU occupancy',\n\tdisjoint: false) ~> SplitDailyFromWeekly@(Weekly, Daily)\nlkpDimDate derive(ecdc_yearweek = year + '-W' + lpad(week_of_year,2,'0')) ~> DCYearWeek\nDCYearWeek aggregate(groupBy(ecdc_yearweek),\n\tWeekStartDate = min(date),\n\t\tWeekSEndDate = max(date)) ~> AggrDimdate\nSplitDailyFromWeekly@Weekly, AggrDimdate join(reported_year_week == ecdc_yearweek,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinWeeklyDimdate\nJoinWeeklyDimdate pivot(groupBy(country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\treported_year_week,\n\t\tpopulation,\n\t\tsource),\n\tpivotBy(indicator, ['New_hospital_ocupency_100k', 'new_icu_ocupency_100k']),\n\tcount = sum(value),\n\tcolumnNaming: '$V_$N',\n\tlateral: false) ~> PivotWeekly\nSplitDailyFromWeekly@Daily pivot(groupBy(country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\treported_date,\n\t\tsource,\n\t\tpopulation),\n\tpivotBy(indicator, ['Daily_hospitalised_100k', 'Daily_icu_100k']),\n\tcount = sum(value),\n\tcolumnNaming: '$V_$N',\n\tlateral: false) ~> PivotDaily\nPivotWeekly sort(desc(reported_year_week, true),\n\tasc(country, true)) ~> SortWeekly\nSortWeekly sink(input(\n\t\tcountry as string,\n\t\tpopulation as string,\n\t\tcountry_code_2_digit as string,\n\t\tcountry_code_3_digit as string,\n\t\tcountry_code as string,\n\t\treported_date as string,\n\t\tsource as string,\n\t\tCases_Count as string,\n\t\tdeaths_Count as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['hospital_weekly.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkWeekly\nPivotDaily sink(input(\n\t\tcountry as string,\n\t\tpopulation as string,\n\t\tcountry_code_2_digit as string,\n\t\tcountry_code_3_digit as string,\n\t\tcountry_code as string,\n\t\treported_date as string,\n\t\tsource as string,\n\t\tCases_Count as string,\n\t\tdeaths_Count as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['hospital_daily.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkDaily"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_processed_hospital_weekly')]",
				"[concat(variables('factoryId'), '/datasets/ds_processed_hosptal_daily')]"
			]
		}
	]
}